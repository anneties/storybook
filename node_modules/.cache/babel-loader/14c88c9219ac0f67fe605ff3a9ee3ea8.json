{"ast":null,"code":"var _jsxFileName = \"/Users/anneties/ATTV/t-mobile/storybook/learnstorybook-design-system/src/Icon.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { icons } from './shared/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Svg = styled.svg`\n  display: ${props => props.block ? 'block' : 'inline-block'};\n  vertical-align: middle;\n\n  shape-rendering: inherit;\n  transform: translate3d(0, 0, 0);\n`;\n_c = Svg;\nconst Path = styled.path`\n  fill: currentColor;\n`;\n\n/**\n * An Icon is a piece of visual element, but we must ensure its accessibility while using it.\n * It can have 2 purposes:\n *\n * - *decorative only*: for example, it illustrates a label next to it. We must ensure that it is ignored by screen readers, by setting `aria-hidden` attribute (ex: `<Icon icon=\"check\" aria-hidden />`)\n * - *non-decorative*: it means that it delivers information. For example, an icon as only child in a button. The meaning can be obvious visually, but it must have a proper text alternative via `aria-label` for screen readers. (ex: `<Icon icon=\"print\" aria-label=\"Print this document\" />`)\n */\n_c2 = Path;\nexport function Icon(_ref) {\n  let {\n    icon,\n    block,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Svg, {\n    viewBox: \"0 0 1024 1024\",\n    width: \"20px\",\n    height: \"20px\",\n    block: block,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Path, {\n      d: icons[icon]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Icon;\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  block: PropTypes.bool\n};\nIcon.defaultProps = {\n  block: false\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Svg\");\n$RefreshReg$(_c2, \"Path\");\n$RefreshReg$(_c3, \"Icon\");","map":{"version":3,"names":["React","PropTypes","styled","icons","Svg","svg","props","block","Path","path","Icon","icon","propTypes","string","isRequired","bool","defaultProps"],"sources":["/Users/anneties/ATTV/t-mobile/storybook/learnstorybook-design-system/src/Icon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { icons } from './shared/icons';\n\nconst Svg = styled.svg`\n  display: ${props => (props.block ? 'block' : 'inline-block')};\n  vertical-align: middle;\n\n  shape-rendering: inherit;\n  transform: translate3d(0, 0, 0);\n`;\n\nconst Path = styled.path`\n  fill: currentColor;\n`;\n\n/**\n * An Icon is a piece of visual element, but we must ensure its accessibility while using it.\n * It can have 2 purposes:\n *\n * - *decorative only*: for example, it illustrates a label next to it. We must ensure that it is ignored by screen readers, by setting `aria-hidden` attribute (ex: `<Icon icon=\"check\" aria-hidden />`)\n * - *non-decorative*: it means that it delivers information. For example, an icon as only child in a button. The meaning can be obvious visually, but it must have a proper text alternative via `aria-label` for screen readers. (ex: `<Icon icon=\"print\" aria-label=\"Print this document\" />`)\n */\nexport function Icon({ icon, block, ...props }) {\n  return (\n    <Svg viewBox=\"0 0 1024 1024\" width=\"20px\" height=\"20px\" block={block} {...props}>\n      <Path d={icons[icon]} />\n    </Svg>\n  );\n}\n\nIcon.propTypes = {\n  icon: PropTypes.string.isRequired,\n  block: PropTypes.bool,\n};\n\nIcon.defaultProps = {\n  block: false,\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AAEvC,MAAMC,GAAG,GAAGF,MAAM,CAACG,GAAI;AACvB,aAAaC,KAAK,IAAKA,KAAK,CAACC,KAAK,GAAG,OAAO,GAAG,cAAgB;AAC/D;AACA;AACA;AACA;AACA,CAAC;AAAC,KANIH,GAAG;AAQT,MAAMI,IAAI,GAAGN,MAAM,CAACO,IAAK;AACzB;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AANA,MAJMD,IAAI;AAWV,OAAO,SAASE,IAAI,OAA4B;EAAA,IAA3B;IAAEC,IAAI;IAAEJ,KAAK;IAAE,GAAGD;EAAM,CAAC;EAC5C,oBACE,QAAC,GAAG;IAAC,OAAO,EAAC,eAAe;IAAC,KAAK,EAAC,MAAM;IAAC,MAAM,EAAC,MAAM;IAAC,KAAK,EAAEC,KAAM;IAAA,GAAKD,KAAK;IAAA,uBAC7E,QAAC,IAAI;MAAC,CAAC,EAAEH,KAAK,CAACQ,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV;AAAC,MANeD,IAAI;AAQpBA,IAAI,CAACE,SAAS,GAAG;EACfD,IAAI,EAAEV,SAAS,CAACY,MAAM,CAACC,UAAU;EACjCP,KAAK,EAAEN,SAAS,CAACc;AACnB,CAAC;AAEDL,IAAI,CAACM,YAAY,GAAG;EAClBT,KAAK,EAAE;AACT,CAAC;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}